name: Release

on: [push]

jobs:
  release:
    name: Create GitHub Release
    # TODO add back
    # if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          # TODO remove
          tag_name: Test
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build:
    name: Build
    # TODO add back
    # if: startsWith(github.ref, 'refs/tags/')
    needs: [release]
    runs-on: ${{ matrix.os }}

    strategy:
        matrix:
          os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - run: npm ci
      - run: npm run install-app-deps

      # https://github.com/electron-userland/electron-builder/issues/4176
      - name: Temporarily fix electron-builder (Windows, Linux)
        if: matrix.os != 'macos-latest'
        run: |
          sed -i 's/\^\[\\w/\^\[.\\w/g' node_modules/builder-util/out/util.js
        shell: bash

      - name: Temporarily fix electron-builder (MacOS)
        if: matrix.os == 'macos-latest'
        run: |
          sed -i '' 's/\^\[\\w/\^\[.\\w/g' node_modules/builder-util/out/util.js
        shell: bash

      - run: npm run build
        env:
          CI: true
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'dist_electron/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
